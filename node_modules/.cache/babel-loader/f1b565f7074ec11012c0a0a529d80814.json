{"ast":null,"code":"/**\r\n * lodash 3.2.0 (Custom Build) <https://lodash.com/>\r\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\r\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\r\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\r\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n * Available under MIT license <https://lodash.com/license>\r\n */\nvar baseIsMatch = require('lodash._baseismatch'),\n    pairs = require('lodash.pairs');\n/**\r\n * The base implementation of `_.matches` which does not clone `source`.\r\n *\r\n * @private\r\n * @param {Object} source The object of property values to match.\r\n * @returns {Function} Returns the new function.\r\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    var key = matchData[0][0],\n        value = matchData[0][1];\n    return function (object) {\n      if (object == null) {\n        return false;\n      }\n\n      return object[key] === value && (value !== undefined || key in toObject(object));\n    };\n  }\n\n  return function (object) {\n    return baseIsMatch(object, matchData);\n  };\n}\n/**\r\n * Gets the propery names, values, and compare flags of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the match data of `object`.\r\n */\n\n\nfunction getMatchData(object) {\n  var result = pairs(object),\n      length = result.length;\n\n  while (length--) {\n    result[length][2] = isStrictComparable(result[length][1]);\n  }\n\n  return result;\n}\n/**\r\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` if suitable for strict\r\n *  equality comparisons, else `false`.\r\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n/**\r\n * Converts `value` to an object if it's not one.\r\n *\r\n * @private\r\n * @param {*} value The value to process.\r\n * @returns {Object} Returns the object.\r\n */\n\n\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n/**\r\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\r\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\r\n *\r\n * @static\r\n * @memberOf _\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\r\n * @example\r\n *\r\n * _.isObject({});\r\n * // => true\r\n *\r\n * _.isObject([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObject(1);\r\n * // => false\r\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = baseMatches;","map":null,"metadata":{},"sourceType":"script"}