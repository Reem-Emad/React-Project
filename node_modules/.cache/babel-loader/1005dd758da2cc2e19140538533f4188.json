{"ast":null,"code":"/**\r\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\r\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\r\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\r\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\r\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n * Available under MIT license <https://lodash.com/license>\r\n */\nvar keys = require('lodash.keys');\n/**\r\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\r\n * of an array-like value.\r\n */\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\r\n * The base implementation of `_.forEach` without support for callback\r\n * shorthands and `this` binding.\r\n *\r\n * @private\r\n * @param {Array|Object|string} collection The collection to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array|Object|string} Returns `collection`.\r\n */\n\nvar baseEach = createBaseEach(baseForOwn);\n/**\r\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\r\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\r\n * each property. Iteratee functions may exit iteration early by explicitly\r\n * returning `false`.\r\n *\r\n * @private\r\n * @param {Object} object The object to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @param {Function} keysFunc The function to get the keys of `object`.\r\n * @returns {Object} Returns `object`.\r\n */\n\nvar baseFor = createBaseFor();\n/**\r\n * The base implementation of `_.forOwn` without support for callback\r\n * shorthands and `this` binding.\r\n *\r\n * @private\r\n * @param {Object} object The object to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Object} Returns `object`.\r\n */\n\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n/**\r\n * The base implementation of `_.property` without support for deep paths.\r\n *\r\n * @private\r\n * @param {string} key The key of the property to get.\r\n * @returns {Function} Returns the new function.\r\n */\n\n\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n/**\r\n * Creates a `baseEach` or `baseEachRight` function.\r\n *\r\n * @private\r\n * @param {Function} eachFunc The function to iterate over a collection.\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Function} Returns the new base function.\r\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    var length = collection ? getLength(collection) : 0;\n\n    if (!isLength(length)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var index = fromRight ? length : -1,\n        iterable = toObject(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n/**\r\n * Creates a base function for `_.forIn` or `_.forInRight`.\r\n *\r\n * @private\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Function} Returns the new base function.\r\n */\n\n\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while (fromRight ? index-- : ++index < length) {\n      var key = props[index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n/**\r\n * Gets the \"length\" property value of `object`.\r\n *\r\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\r\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {*} Returns the \"length\" value.\r\n */\n\n\nvar getLength = baseProperty('length');\n/**\r\n * Checks if `value` is a valid array-like length.\r\n *\r\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\r\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n/**\r\n * Converts `value` to an object if it's not one.\r\n *\r\n * @private\r\n * @param {*} value The value to process.\r\n * @returns {Object} Returns the object.\r\n */\n\n\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n/**\r\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\r\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\r\n *\r\n * @static\r\n * @memberOf _\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\r\n * @example\r\n *\r\n * _.isObject({});\r\n * // => true\r\n *\r\n * _.isObject([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObject(1);\r\n * // => false\r\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = baseEach;","map":null,"metadata":{},"sourceType":"script"}