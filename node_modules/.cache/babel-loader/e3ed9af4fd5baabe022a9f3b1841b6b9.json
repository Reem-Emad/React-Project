{"ast":null,"code":"import _defineProperty from \"E:\\\\ITI\\\\React\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"E:\\\\ITI\\\\React\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\ITI\\\\React\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\ITI\\\\React\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\ITI\\\\React\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\ITI\\\\React\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\ITI\\\\React\\\\project\\\\src\\\\components\\\\SignIn-SignUp\\\\SignUp_Form.js\";\nimport React from 'react';\nimport SimpleSchema from 'simpl-schema';\nimport { MyContext } from '../../App';\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\n\nvar SignUp =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(SignUp, _React$PureComponent);\n\n  function SignUp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignUp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      FName: '',\n      LName: '',\n      email: '',\n      password: '',\n      repeatedPassword: '',\n      image: '',\n      error: [{\n        name: '',\n        msg: ''\n      }]\n    };\n\n    _this.handleSubmit = function (existingUsers) {\n      return function (e) {\n        e.preventDefault();\n        var _this$state = _this.state,\n            FName = _this$state.FName,\n            LName = _this$state.LName,\n            email = _this$state.email,\n            password = _this$state.password,\n            repeatedPassword = _this$state.repeatedPassword,\n            image = _this$state.image;\n        var validationContext = new SimpleSchema({\n          FName: {\n            type: String,\n            min: 1,\n            regEx: /^[a-z-A-Z_]{1,15}$/\n          },\n          LName: {\n            type: String,\n            min: 1,\n            regEx: /^[a-z-A-Z_]{1,15}$/\n          },\n          email: SimpleSchema.RegEx.EmailWithTLD,\n          password: {\n            type: String,\n            min: 2\n          },\n          repeatedPassword: {\n            type: String,\n            min: 2\n          },\n          image: {\n            type: String,\n            defaultValue: 'N/A'\n          }\n        }).newContext();\n        validationContext.validate({\n          FName: FName,\n          LName: LName,\n          email: email,\n          password: password,\n          repeatedPassword: repeatedPassword,\n          image: image\n        }); // console.log(validationContext.validationErrors())\n\n        var errors = [];\n        validationContext.validationErrors().map(function (e) {\n          if (e.type == 'regEx' && e.name != 'email') errors.push({\n            name: e.name,\n            msg: 'must be charachters only'\n          });else if (e.type == 'regEx' && e.name == 'email' && e.value != '') errors.push({\n            name: e.name,\n            msg: 'email not valid'\n          });else if (e.name == 'email' && e.value == '') errors.push({\n            name: e.name,\n            msg: 'required'\n          });else errors.push({\n            name: e.name,\n            msg: 'required'\n          }); // this.setState({error:{name: e.name,msg:'must be charachters only'} })\n        });\n        var user = existingUsers.find(function (element) {\n          if (element.email === email) return element;\n        });\n        if (user != undefined) errors.push({\n          name: 'email',\n          msg: 'email already used'\n        });\n        if (repeatedPassword != password) errors.push({\n          name: 'repeatedPassword',\n          msg: 'Not matched with password'\n        });\n\n        _this.setState({\n          error: errors\n        });\n      };\n    };\n\n    _this.handleChange = function (e) {\n      e.preventDefault();\n      var key = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, key, value));\n    };\n\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(MyContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, function (value) {\n        return React.createElement(\"div\", {\n          style: {\n            height: '400px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(Form, {\n          className: \"SignUp_form\",\n          onSubmit: _this2.handleSubmit(value.state.users),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(Form.Text, {\n          className: \"text-muted\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"New Here? Create a free account!\"), React.createElement(Form.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"text\",\n          name: \"FName\",\n          placeholder: \"First name\",\n          value: _this2.state.FName,\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }), React.createElement(Form.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, _this2.state.error.map(function (e) {\n          if (e.name == 'FName') return e.msg;\n        }))), React.createElement(Form.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"text\",\n          name: \"LName\",\n          placeholder: \"Last name\",\n          value: _this2.state.LName,\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        })), React.createElement(Form.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Enter email\",\n          value: _this2.state.email,\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        })), React.createElement(Form.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: _this2.state.password,\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        })), React.createElement(Form.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"password\",\n          name: \"repeatedPassword\",\n          placeholder: \"Retype Password\",\n          value: _this2.state.repeatedPassword,\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        })), React.createElement(Form.Group, {\n          style: {\n            display: 'flex'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"file\",\n          name: \"image\",\n          placeholder: \"upload Image\",\n          className: \"ImageUpload\",\n          value: _this2.state.image,\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), React.createElement(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          className: \"SignIn_form-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"upload image\")), React.createElement(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          className: \"SignUp_form-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Sign up\")));\n      });\n    }\n  }]);\n\n  return SignUp;\n}(React.PureComponent);\n\nexport default SignUp;","map":{"version":3,"sources":["E:\\ITI\\React\\project\\src\\components\\SignIn-SignUp\\SignUp_Form.js"],"names":["React","SimpleSchema","MyContext","Form","Button","SignUp","state","FName","LName","email","password","repeatedPassword","image","error","name","msg","handleSubmit","existingUsers","e","preventDefault","validationContext","type","String","min","regEx","RegEx","EmailWithTLD","defaultValue","newContext","validate","errors","validationErrors","map","push","value","user","find","element","undefined","setState","handleChange","key","target","height","users","display","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport SimpleSchema from 'simpl-schema';\r\nimport { MyContext } from '../../App';\r\nimport { Form } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass SignUp extends React.PureComponent {\r\n    state = {\r\n        FName: '' ,\r\n        LName:'' ,\r\n        email: '',\r\n        password:'' ,\r\n        repeatedPassword: '',\r\n        image:'',\r\n        error:[{name:'',msg:''}]\r\n    }\r\n    handleSubmit=(existingUsers) => (e) => {\r\n        e.preventDefault();\r\n        const { FName, LName, email, password, repeatedPassword, image } = this.state;\r\n        const validationContext = new SimpleSchema({\r\n            FName: { type: String, min: 1, regEx: /^[a-z-A-Z_]{1,15}$/ },\r\n            LName: { type: String, min: 1,  regEx: /^[a-z-A-Z_]{1,15}$/ },\r\n            email: SimpleSchema.RegEx.EmailWithTLD ,\r\n            password: { type: String, min: 2 },\r\n            repeatedPassword:{ type: String, min: 2 },\r\n            image: { type: String, defaultValue: 'N/A' }\r\n        }).newContext();\r\n\r\n        validationContext.validate({ FName, LName, email, password, repeatedPassword, image });\r\n        // console.log(validationContext.validationErrors())\r\n       const errors=[];\r\n        validationContext.validationErrors().map(e=>{\r\n            if(e.type=='regEx' && e.name!='email')\r\n            errors.push({name: e.name,msg:'must be charachters only'})\r\n            else if(e.type=='regEx' && e.name=='email' && e.value!='')\r\n            errors.push({name: e.name,msg:'email not valid'})\r\n            else if (e.name=='email' && e.value=='')\r\n            errors.push({name: e.name,msg:'required'})\r\n            else\r\n            errors.push({name: e.name,msg:'required'})\r\n            // this.setState({error:{name: e.name,msg:'must be charachters only'} })\r\n        });\r\n        const user=existingUsers.find(element => {\r\n            if( element.email===email)\r\n              return element;\r\n         }) \r\n         if(user!=undefined)\r\n         errors.push({name:'email',msg:'email already used'})\r\n\r\n        if(repeatedPassword!=password)\r\n        errors.push({name:'repeatedPassword',msg:'Not matched with password'})\r\n        this.setState({error: errors})\r\n    }\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        const key = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({ [key]: value });\r\n    }\r\n    render() {\r\n        return (\r\n            <MyContext.Consumer>\r\n\r\n            {value =>\r\n                (\r\n            <div style={{ height: '400px' }}>\r\n                <Form className='SignUp_form' onSubmit={this.handleSubmit(value.state.users)}>\r\n                    <Form.Text className=\"text-muted\">\r\n                        New Here? Create a free account!\r\n                    </Form.Text>\r\n                    <Form.Group>\r\n                        <Form.Control type=\"text\" name='FName' placeholder=\"First name\" value={this.state.FName} onChange={this.handleChange} />\r\n                        <Form.Text>{\r\n                                  this.state.error.map(e=> {\r\n                                      if(e.name=='FName')\r\n                                      return e.msg\r\n                                     \r\n                                  })\r\n                                    }\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Control type=\"text\" name='LName' placeholder=\"Last name\" value={this.state.LName} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Control type=\"text\" name='email' placeholder=\"Enter email\" value={this.state.email} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group >\r\n                        <Form.Control type=\"password\" name='password' placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n                    <Form.Group >\r\n                        <Form.Control type=\"password\" name='repeatedPassword' placeholder=\"Retype Password\" value={this.state.repeatedPassword} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n                    <Form.Group style={{ display: 'flex' }}>\r\n                        <Form.Control type=\"file\" name='image' placeholder=\"upload Image\" className=\"ImageUpload\" value={this.state.image} onChange={this.handleChange} />\r\n                        <Button variant=\"primary\" type=\"submit\" className='SignIn_form-btn'>\r\n                            upload image\r\n                       </Button>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\" className='SignUp_form-btn'>\r\n                        Sign up\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n              )\r\n            }\r\n        </MyContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}