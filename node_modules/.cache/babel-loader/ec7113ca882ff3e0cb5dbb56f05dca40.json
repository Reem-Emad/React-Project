{"ast":null,"code":"import _classCallCheck from \"R:\\\\ui_iti\\\\React\\\\project\\\\project\\\\React-Project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"R:\\\\ui_iti\\\\React\\\\project\\\\project\\\\React-Project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"R:\\\\ui_iti\\\\React\\\\project\\\\project\\\\React-Project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"R:\\\\ui_iti\\\\React\\\\project\\\\project\\\\React-Project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"R:\\\\ui_iti\\\\React\\\\project\\\\project\\\\React-Project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"R:\\\\ui_iti\\\\React\\\\project\\\\project\\\\React-Project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"R:\\\\ui_iti\\\\React\\\\project\\\\project\\\\React-Project\\\\src\\\\components\\\\Categories\\\\addCategort.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, Form, Modal, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nvar AddCategory =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddCategory, _Component);\n\n  function AddCategory(props) {\n    var _this;\n\n    _classCallCheck(this, AddCategory);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddCategory).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        Name: e.target.value\n      }, function () {\n        console.log(\"catnamet \", _this.state.Name);\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.state.Name.length >= 5) {\n        var Id = Math.floor(Math.random() * 5000) + 1000;\n\n        _this.setState({\n          error: false,\n          Name: ''\n        }); //here should add the category using back end\n        //finaly close modal\n\n\n        _this.handleClose();\n      } else {\n        _this.setState({\n          error: true\n        });\n      }\n    };\n\n    _this.handleShow = _this.handleShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      show: false,\n      Name: '',\n      error: false\n    };\n    return _this;\n  }\n\n  _createClass(AddCategory, [{\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        show: false\n      });\n    }\n  }, {\n    key: \"handleShow\",\n    value: function handleShow() {\n      this.setState({\n        show: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Col, {\n        key: \"0\",\n        className: \"m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: '18rem'\n        },\n        onClick: this.handleShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Add Category\", React.createElement(FontAwesomeIcon, {\n        className: \"float-right\",\n        icon: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.show,\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Add Category\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Title\"), React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"Name\",\n        value: this.state.Name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), this.state.error && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Enter valid Name\")))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Close\"), React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Add\")))));\n    }\n  }]);\n\n  return AddCategory;\n}(Component);\n\nexport { AddCategory as default };","map":{"version":3,"sources":["R:\\ui_iti\\React\\project\\project\\React-Project\\src\\components\\Categories\\addCategort.js"],"names":["React","Component","Row","Col","Card","Form","Modal","Button","FontAwesomeIcon","AddCategory","props","handleChange","e","setState","Name","target","value","console","log","state","handleSubmit","preventDefault","length","Id","Math","floor","random","error","handleClose","handleShow","bind","show","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Row, Col, Card, Form, Modal, Button } from 'react-bootstrap';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\n\r\nexport default class AddCategory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n\r\n        this.state = {\r\n            show: false,\r\n            Name: '',\r\n            error: false\r\n        };\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({ show: false });\r\n    }\r\n\r\n    handleShow() {\r\n        this.setState({ show: true });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({Name: e.target.value}, () => {console.log(\"catnamet \", this.state.Name)});\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.Name.length >= 5){\r\n            const Id = Math.floor(Math.random() * (5000)) + 1000 ;\r\n            this.setState({\r\n                error: false,\r\n                Name: ''\r\n            })\r\n            //here should add the category using back end\r\n                      \r\n            //finaly close modal\r\n            this.handleClose();\r\n        }\r\n        else{\r\n            this.setState({error: true})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col key=\"0\" className=\"m-3\">\r\n                        <Card style={{ width: '18rem' }} onClick={this.handleShow}>\r\n                            <Card.Body>\r\n                                <Card.Title>Add Category\r\n                            <FontAwesomeIcon className=\"float-right\" icon=\"plus\" />\r\n                                </Card.Title>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Modal show={this.state.show} onHide={this.handleClose}>\r\n                        <Modal.Header>\r\n                            <Modal.Title>Add Category</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n\r\n                            <Form>\r\n                                <Form.Group >\r\n                                    <Form.Label>Title</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\" name=\"Name\" \r\n                                        value={this.state.Name} \r\n                                        onChange={this.handleChange} \r\n                                    />\r\n                                    {\r\n                                        this.state.error && <p>Enter valid Name</p>\r\n                                    }\r\n                                </Form.Group>\r\n                                \r\n                            </Form>\r\n\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                Close\r\n                       </Button>\r\n                            <Button variant=\"primary\" onClick={this.handleSubmit}>\r\n                                Add\r\n                       </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}