{"ast":null,"code":"/**\r\n * lodash 3.2.1 (Custom Build) <https://lodash.com/>\r\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\r\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\r\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\r\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n * Available under MIT license <https://lodash.com/license>\r\n */\nvar baseCallback = require('lodash._basecallback'),\n    baseEach = require('lodash._baseeach'),\n    baseFind = require('lodash._basefind'),\n    baseFindIndex = require('lodash._basefindindex'),\n    isArray = require('lodash.isarray');\n/**\r\n * Creates a `_.find` or `_.findLast` function.\r\n *\r\n * @private\r\n * @param {Function} eachFunc The function to iterate over a collection.\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Function} Returns the new find function.\r\n */\n\n\nfunction createFind(eachFunc, fromRight) {\n  return function (collection, predicate, thisArg) {\n    predicate = baseCallback(predicate, thisArg, 3);\n\n    if (isArray(collection)) {\n      var index = baseFindIndex(collection, predicate, fromRight);\n      return index > -1 ? collection[index] : undefined;\n    }\n\n    return baseFind(collection, predicate, eachFunc);\n  };\n}\n/**\r\n * Iterates over elements of `collection`, returning the first element\r\n * `predicate` returns truthy for. The predicate is bound to `thisArg` and\r\n * invoked with three arguments: (value, index|key, collection).\r\n *\r\n * If a property name is provided for `predicate` the created `_.property`\r\n * style callback returns the property value of the given element.\r\n *\r\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\r\n * style callback returns `true` for elements that have a matching property\r\n * value, else `false`.\r\n *\r\n * If an object is provided for `predicate` the created `_.matches` style\r\n * callback returns `true` for elements that have the properties of the given\r\n * object, else `false`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @alias detect\r\n * @category Collection\r\n * @param {Array|Object|string} collection The collection to search.\r\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\r\n *  per iteration.\r\n * @param {*} [thisArg] The `this` binding of `predicate`.\r\n * @returns {*} Returns the matched element, else `undefined`.\r\n * @example\r\n *\r\n * var users = [\r\n *   { 'user': 'barney',  'age': 36, 'active': true },\r\n *   { 'user': 'fred',    'age': 40, 'active': false },\r\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\r\n * ];\r\n *\r\n * _.result(_.find(users, function(chr) {\r\n *   return chr.age < 40;\r\n * }), 'user');\r\n * // => 'barney'\r\n *\r\n * // using the `_.matches` callback shorthand\r\n * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\r\n * // => 'pebbles'\r\n *\r\n * // using the `_.matchesProperty` callback shorthand\r\n * _.result(_.find(users, 'active', false), 'user');\r\n * // => 'fred'\r\n *\r\n * // using the `_.property` callback shorthand\r\n * _.result(_.find(users, 'active'), 'user');\r\n * // => 'barney'\r\n */\n\n\nvar find = createFind(baseEach);\nmodule.exports = find;","map":null,"metadata":{},"sourceType":"script"}