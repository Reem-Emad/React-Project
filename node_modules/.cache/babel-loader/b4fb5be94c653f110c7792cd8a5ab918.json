{"ast":null,"code":"import _classCallCheck from \"D:\\\\ITI\\\\React ITI Course\\\\React Final Project\\\\React-Project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\ITI\\\\React ITI Course\\\\React Final Project\\\\React-Project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\ITI\\\\React ITI Course\\\\React Final Project\\\\React-Project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\ITI\\\\React ITI Course\\\\React Final Project\\\\React-Project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\ITI\\\\React ITI Course\\\\React Final Project\\\\React-Project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\ITI\\\\React ITI Course\\\\React Final Project\\\\React-Project\\\\src\\\\components\\\\User\\\\Books.js\";\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport UserNavBar from './UserNavBar';\nimport Table from 'react-bootstrap/Table';\nimport './Home.css';\nimport { MDBDataTable } from 'mdbreact';\nimport books from '../../books';\n\nvar UserHome =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserHome, _React$Component);\n\n  function UserHome() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserHome);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserHome)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: books\n    };\n\n    _this.Allbooks = function (e) {\n      _this.setState({\n        books: books\n      });\n    };\n\n    _this.Read = function (e) {\n      var onlyRead = books.filter(function (b) {\n        return b.read === true;\n      });\n\n      _this.setState({\n        books: onlyRead\n      });\n    };\n\n    _this.currentlyReading = function (e) {\n      var currentlyreading = books.filter(function (b) {\n        return b.currentlyReading === true;\n      });\n\n      _this.setState({\n        books: currentlyreading\n      });\n    };\n\n    _this.wantToRead = function (e) {\n      var wanttoread = books.filter(function (b) {\n        return b.wantToRead === true;\n      });\n\n      _this.setState({\n        books: wanttoread\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UserHome, [{\n    key: \"render\",\n    value: function render() {\n      var data = {\n        columns: [{\n          label: 'Id',\n          field: 'id',\n          sort: 'asc' // width: 150\n\n        }, {\n          label: 'Cover',\n          field: 'cover',\n          sort: 'asc' // width: 150\n\n        }, {\n          label: 'Title',\n          field: 'title',\n          sort: 'asc' // width: 270\n\n        }, {\n          label: 'Author',\n          field: 'author',\n          sort: 'asc' // width: 200\n\n        }, {\n          label: 'Category',\n          field: 'category',\n          sort: 'asc' // width: 100\n\n        }, {\n          label: 'Rating',\n          field: 'rating',\n          sort: 'asc' // width: 150\n\n        }, {\n          label: 'Pages',\n          field: 'pages',\n          sort: 'asc' // width: 100\n\n        }],\n        rows: this.state.books\n      };\n      return React.createElement(React.Fragment, null, React.createElement(MDBDataTable // small\n      , {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UserHome;\n}(React.Component);\n\nexport default UserHome;","map":{"version":3,"sources":["D:\\ITI\\React ITI Course\\React Final Project\\React-Project\\src\\components\\User\\Books.js"],"names":["React","Dropdown","UserNavBar","Table","MDBDataTable","books","UserHome","state","Allbooks","e","setState","Read","onlyRead","filter","b","read","currentlyReading","currentlyreading","wantToRead","wanttoread","data","columns","label","field","sort","rows","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAO,YAAP;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;;IAGMC,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJF,MAAAA,KAAK,EAAEA;AADH,K;;UAGRG,Q,GAAW,UAACC,CAAD,EAAO;AACd,YAAKC,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACH,K;;UACDM,I,GAAO,UAACF,CAAD,EAAO;AACV,UAAMG,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAa,UAAAC,CAAC;AAAA,eAAKA,CAAC,CAACC,IAAF,KAAW,IAAhB;AAAA,OAAd,CAAjB;;AACA,YAAKL,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEO;AAAT,OAAd;AACH,K;;UACDI,gB,GAAmB,UAACP,CAAD,EAAO;AACtB,UAAMQ,gBAAgB,GAAGZ,KAAK,CAACQ,MAAN,CAAa,UAAAC,CAAC;AAAA,eAAKA,CAAC,CAACE,gBAAF,KAAuB,IAA5B;AAAA,OAAd,CAAzB;;AACA,YAAKN,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEY;AAAT,OAAd;AACH,K;;UACDC,U,GAAa,UAACT,CAAD,EAAO;AAChB,UAAMU,UAAU,GAAGd,KAAK,CAACQ,MAAN,CAAa,UAAAC,CAAC;AAAA,eAAKA,CAAC,CAACI,UAAF,KAAiB,IAAtB;AAAA,OAAd,CAAnB;;AACA,YAAKR,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEc;AAAT,OAAd;AACH,K;;;;;;;6BACQ;AACL,UAAMC,IAAI,GAAG;AACTC,QAAAA,OAAO,EAAE,CACL;AACIC,UAAAA,KAAK,EAAE,IADX;AAEIC,UAAAA,KAAK,EAAE,IAFX;AAGIC,UAAAA,IAAI,EAAE,KAHV,CAII;;AAJJ,SADK,EAOL;AACIF,UAAAA,KAAK,EAAE,OADX;AAEIC,UAAAA,KAAK,EAAE,OAFX;AAGIC,UAAAA,IAAI,EAAE,KAHV,CAII;;AAJJ,SAPK,EAaL;AACIF,UAAAA,KAAK,EAAE,OADX;AAEIC,UAAAA,KAAK,EAAE,OAFX;AAGIC,UAAAA,IAAI,EAAE,KAHV,CAII;;AAJJ,SAbK,EAmBL;AACIF,UAAAA,KAAK,EAAE,QADX;AAEIC,UAAAA,KAAK,EAAE,QAFX;AAGIC,UAAAA,IAAI,EAAE,KAHV,CAII;;AAJJ,SAnBK,EAyBL;AACIF,UAAAA,KAAK,EAAE,UADX;AAEIC,UAAAA,KAAK,EAAE,UAFX;AAGIC,UAAAA,IAAI,EAAE,KAHV,CAII;;AAJJ,SAzBK,EA+BL;AACIF,UAAAA,KAAK,EAAE,QADX;AAEIC,UAAAA,KAAK,EAAE,QAFX;AAGIC,UAAAA,IAAI,EAAE,KAHV,CAII;;AAJJ,SA/BK,EAqCL;AACIF,UAAAA,KAAK,EAAE,OADX;AAEIC,UAAAA,KAAK,EAAE,OAFX;AAGIC,UAAAA,IAAI,EAAE,KAHV,CAII;;AAJJ,SArCK,CADA;AA6CTC,QAAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWF;AA7CR,OAAb;AAiDA,aACI,0CAEQ,oBAAC,YAAD,CACI;AADJ;AAEI,QAAA,IAAI,EAAEe,IAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,CADJ;AAYH;;;;EAjFkBpB,KAAK,CAAC0B,S;;AAmF7B,eAAepB,QAAf","sourcesContent":["import React from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport UserNavBar from './UserNavBar';\r\nimport Table from 'react-bootstrap/Table'\r\nimport './Home.css';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport books from '../../books';\r\n\r\n\r\nclass UserHome extends React.Component {\r\n    state = {\r\n        books: books\r\n    }\r\n    Allbooks = (e) => {\r\n        this.setState({ books: books })\r\n    }\r\n    Read = (e) => {\r\n        const onlyRead = books.filter(b => (b.read === true));\r\n        this.setState({ books: onlyRead })\r\n    }\r\n    currentlyReading = (e) => {\r\n        const currentlyreading = books.filter(b => (b.currentlyReading === true));\r\n        this.setState({ books: currentlyreading })\r\n    }\r\n    wantToRead = (e) => {\r\n        const wanttoread = books.filter(b => (b.wantToRead === true));\r\n        this.setState({ books: wanttoread })\r\n    }\r\n    render() {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Id',\r\n                    field: 'id',\r\n                    sort: 'asc',\r\n                    // width: 150\r\n                },\r\n                {\r\n                    label: 'Cover',\r\n                    field: 'cover',\r\n                    sort: 'asc',\r\n                    // width: 150\r\n                },\r\n                {\r\n                    label: 'Title',\r\n                    field: 'title',\r\n                    sort: 'asc',\r\n                    // width: 270\r\n                },\r\n                {\r\n                    label: 'Author',\r\n                    field: 'author',\r\n                    sort: 'asc',\r\n                    // width: 200\r\n                },\r\n                {\r\n                    label: 'Category',\r\n                    field: 'category',\r\n                    sort: 'asc',\r\n                    // width: 100\r\n                },\r\n                {\r\n                    label: 'Rating',\r\n                    field: 'rating',\r\n                    sort: 'asc',\r\n                    // width: 150\r\n                },\r\n                {\r\n                    label: 'Pages',\r\n                    field: 'pages',\r\n                    sort: 'asc',\r\n                    // width: 100\r\n                }\r\n            ],\r\n            rows: this.state.books\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n               \r\n                    <MDBDataTable\r\n                        // small\r\n                        data={data}\r\n                    />\r\n\r\n            \r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default UserHome;"]},"metadata":{},"sourceType":"module"}