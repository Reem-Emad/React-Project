{"ast":null,"code":"import _classCallCheck from \"E:\\\\ITI\\\\React\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\ITI\\\\React\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\ITI\\\\React\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\ITI\\\\React\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\ITI\\\\React\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\ITI\\\\React\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\ITI\\\\React\\\\project\\\\src\\\\components\\\\Categories\\\\Edit-Category.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, Form, Modal, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nvar EditCategory =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditCategory, _Component);\n\n  function EditCategory(props) {\n    var _this;\n\n    _classCallCheck(this, EditCategory);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditCategory).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        Name: e.target.value\n      }, function () {\n        console.log(\"catnamet \", _this.state.Name);\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.state.Name.length >= 5) {\n        var Id = _this.props.Id;\n\n        _this.setState({\n          error: false,\n          Name: ''\n        }); //here should add the category using back end\n        //finaly close modal\n\n\n        _this.handleClose();\n      } else {\n        _this.setState({\n          error: true\n        });\n      }\n    };\n\n    _this.handleShow = _this.handleShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      show: false,\n      Name: '',\n      error: false\n    };\n    return _this;\n  }\n\n  _createClass(EditCategory, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        Name: this.props.Name,\n        show: this.props.show\n      });\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.props.hideUpdate();\n    }\n  }, {\n    key: \"handleShow\",\n    value: function handleShow() {\n      this.props.ShowUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Row, {\n        className: \"no-gutters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.show,\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Add Category\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Title\"), React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"Name\",\n        value: this.state.Name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), this.state.error && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Enter valid Name\")))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Close\"), React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Edit\")))));\n    }\n  }]);\n\n  return EditCategory;\n}(Component);\n\nexport { EditCategory as default };","map":{"version":3,"sources":["E:\\ITI\\React\\project\\src\\components\\Categories\\Edit-Category.js"],"names":["React","Component","Row","Col","Card","Form","Modal","Button","FontAwesomeIcon","EditCategory","props","handleChange","e","setState","Name","target","value","console","log","state","handleSubmit","preventDefault","length","Id","error","handleClose","handleShow","bind","show","hideUpdate","ShowUpdate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Row, Col, Card, Form, Modal, Button } from 'react-bootstrap';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\n\r\nexport default class EditCategory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n\r\n        this.state = {\r\n            show: false,\r\n            Name: '',\r\n            error: false\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            Name: this.props.Name,\r\n            show: this.props.show\r\n        })\r\n    }\r\n\r\n    handleClose() {\r\n        this.props.hideUpdate();\r\n    }\r\n\r\n    handleShow() {\r\n        this.props.ShowUpdate();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({Name: e.target.value}, () => {console.log(\"catnamet \", this.state.Name)});\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.Name.length >= 5){\r\n            const Id = this.props.Id ;\r\n            this.setState({\r\n                error: false,\r\n                Name: ''\r\n            })\r\n            //here should add the category using back end\r\n  \r\n         \r\n            //finaly close modal\r\n            this.handleClose();\r\n        }\r\n        else{\r\n            this.setState({error: true})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                \r\n                <Row className=\"no-gutters\">\r\n                    <Modal show={this.state.show} onHide={this.handleClose}>\r\n                        <Modal.Header>\r\n                            <Modal.Title>Add Category</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n\r\n                            <Form>\r\n                                <Form.Group >\r\n                                    <Form.Label>Title</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\" name=\"Name\" \r\n                                        value={this.state.Name} \r\n                                        onChange={this.handleChange} \r\n                                    />\r\n                                    {\r\n                                        this.state.error && <p>Enter valid Name</p>\r\n                                    }\r\n                                </Form.Group>\r\n                                \r\n                            </Form>\r\n\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                Close\r\n                       </Button>\r\n                            <Button variant=\"primary\" onClick={this.handleSubmit}>\r\n                                Edit\r\n                       </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}